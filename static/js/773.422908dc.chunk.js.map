{"version":3,"file":"static/js/773.422908dc.chunk.js","mappings":"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","sources":["features/List.js","features/SearchBar.js","pages/MostPopular.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { alpha } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport { visuallyHidden } from \"@mui/utils\";\r\nimport { format } from \"date-fns\";\r\n\r\nlet rows = [];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    label: \"name\",\r\n  },\r\n  {\r\n    id: \"stargazers_count\",\r\n    label: \"stars\",\r\n  },\r\n  {\r\n    id: \"forks_count\",\r\n    label: \"fork\",\r\n  },\r\n  {\r\n    id: \"updated_at\",\r\n    type: Date,\r\n    label: \"lastUpdate\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={\"left\"}\r\n            padding={\"normal\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          sx={{ flex: \"1 1 100%\" }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{ flex: \"1 1 100%\" }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Table of repositories\r\n        </Typography>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default function List({ repos }) {\r\n  rows = repos;\r\n  console.log(rows);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={\"medium\"}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows?.length}\r\n            />\r\n            <TableBody>\r\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n                 rows.slice().sort(getComparator(order, orderBy)) */}\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      {headCells.map((item) => (\r\n                        <>\r\n                          {item.type === Date ? (\r\n                            <TableCell align=\"left\">{format(new Date(row[item.id]), 'yyyy/MM/dd HH:mm')}</TableCell>\r\n                          ) : (\r\n                            <TableCell align=\"left\">{row[item.id]}</TableCell>\r\n                          )}\r\n                        </>\r\n                      ))}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: 53 * emptyRows,\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nconst SearchBar = ({setSearchQuery}) => (\r\n    <form>\r\n      <TextField\r\n        id=\"search-bar\"\r\n        className=\"text\"\r\n        onInput={(e) => {\r\n          setSearchQuery(e.target.value);\r\n        }}\r\n        label=\"Enter a repo name\"\r\n        variant=\"outlined\"\r\n        placeholder=\"Search...\"\r\n        size=\"small\"\r\n      />\r\n      <IconButton type=\"submit\" aria-label=\"search\">\r\n        <SearchIcon style={{ fill: \"blue\" }} />\r\n       </IconButton>\r\n    </form>\r\n  );\r\n\r\nexport default SearchBar","import React, { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useEffect } from \"react\";\r\nimport List from \"../features/List\";\r\nimport SearchBar from \"../features/SearchBar\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst MostPopular = () => {\r\n  const [bestRepos, setBestRepos] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  \r\n  \r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://api.github.com/search/repositories?q=stars&sort=stars&per_page=10&order=desc\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => setBestRepos(data.items));\r\n  }, []);\r\n\r\n  \r\n  const filterData = (query, bestRepos) => {\r\n        if (query?.length < 3) {\r\n      return bestRepos;\r\n    } else {\r\n      return bestRepos.filter((repo) => repo.name.toLowerCase().includes(query.toLowerCase()));\r\n    }\r\n  };\r\n\r\n    const dataFiltered = filterData(searchQuery, bestRepos);\r\n\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: \"24px\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: \"48px\",\r\n      }}\r\n    >\r\n      <Typography variant=\"h4\" component=\"div\" gutterBottom>\r\n        Most popular repositories in git hub\r\n      </Typography>\r\n      <SearchBar setSearchQuery={setSearchQuery} />\r\n      <List repos={dataFiltered} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MostPopular;\r\n"],"names":["rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","label","type","Date","EnhancedTableHead","props","onSelectAllClick","onRequestSort","numSelected","rowCount","headCell","align","padding","sortDirection","active","direction","onClick","property","event","component","sx","visuallyHidden","EnhancedTableToolbar","pl","sm","pr","xs","bgcolor","theme","alpha","palette","primary","main","action","activatedOpacity","flex","color","variant","List","repos","console","log","React","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","max","length","width","mb","minWidth","size","target","checked","newSelecteds","n","name","slice","row","isItemSelected","indexOf","hover","selectedIndex","newSelected","concat","handleClick","role","tabIndex","item","format","style","height","colSpan","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","value","setSearchQuery","TextField","className","onInput","e","placeholder","IconButton","Search","fill","useState","bestRepos","setBestRepos","searchQuery","useEffect","fetch","then","response","json","data","items","dataFiltered","query","filter","repo","toLowerCase","includes","filterData","Box","display","flexDirection","gap","justifyContent","alignItems","Typography","gutterBottom"],"sourceRoot":""}